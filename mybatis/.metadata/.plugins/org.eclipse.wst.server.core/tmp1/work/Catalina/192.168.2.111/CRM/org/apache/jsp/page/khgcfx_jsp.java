/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.90
 * Generated at: 2019-09-27 14:43:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class khgcfx_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/highcharts4/jquery-1.8.3.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/highcharts4/js/highcharts.js\" type=\"text/javascript\"></script> \r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//创建图表对象\r\n");
      out.write("\t\tvar chart = new Highcharts.Chart({\r\n");
      out.write("\t\t\t//图表类型：柱状图\r\n");
      out.write("\t\t\tchart: {\r\n");
      out.write("\t\t\t\t//渲染到哪个位置\r\n");
      out.write("\t\t\t\trenderTo:'container',\r\n");
      out.write("\t\t        type: 'column',\r\n");
      out.write("\t\t        //图表加载事件\r\n");
      out.write("\t\t        events:{\r\n");
      out.write("\t\t        \tload:function(event){\r\n");
      out.write("\t\t        \t\t//通过ajax请求后台的数据\r\n");
      out.write("\t\t        \t\t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/customer/findCustomerGc.do\",{},function(result){\r\n");
      out.write("\t\t        \t\t\t//声明X轴数组\r\n");
      out.write("\t\t        \t\t\tvar xArr = new Array();\r\n");
      out.write("\t\t        \t\t\t//声明Y轴数组\r\n");
      out.write("\t\t        \t\t\tvar yArr = new Array();\r\n");
      out.write("\t\t        \t\t\tfor(var i=0;i<result.length;i++){\r\n");
      out.write("\t\t        \t\t\t\t//开始给两个数组赋值\r\n");
      out.write("\t\t        \t\t\t\txArr.push(result[i].customerLevel);\r\n");
      out.write("\t\t        \t\t\t\tyArr.push(result[i].customerNum);\r\n");
      out.write("\t\t        \t\t\t\t//给X轴赋值(标题)\r\n");
      out.write("\t\t        \t\t\t\tchart.xAxis[0].categories = xArr;\r\n");
      out.write("\t\t        \t\t\t\t//给Y轴赋值\r\n");
      out.write("\t\t        \t\t\t\tchart.series[0].setData(yArr);\r\n");
      out.write("\t\t        \t\t\t}\r\n");
      out.write("\t\t        \t\t},\"json\");\r\n");
      out.write("\t\t        \t}\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    //图表标题\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t        text: '客户构成分析'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    //图表子标题\r\n");
      out.write("\t\t    subtitle: {\r\n");
      out.write("\t\t        text: '数据来源: 查询t_customer表中level字段'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    //X轴\r\n");
      out.write("\t\t    xAxis: {\r\n");
      out.write("\t\t        categories: [\r\n");
      out.write("\t\t            'A','B','C'\r\n");
      out.write("\t\t        ],\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    //Y轴\r\n");
      out.write("\t\t    yAxis: {\r\n");
      out.write("\t\t        min: 0,\r\n");
      out.write("\t\t        title: {\r\n");
      out.write("\t\t            text: '客户数量'\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    //X轴的数据\r\n");
      out.write("\t\t    series: [{\r\n");
      out.write("\t\t        name: '客户',\r\n");
      out.write("\t\t        data: [1,2,3]\r\n");
      out.write("\t\t    }]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\" style=\"min-width:800px;height:400px\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
