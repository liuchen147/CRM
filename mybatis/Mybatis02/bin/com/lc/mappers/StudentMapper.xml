<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.mappers.StudentMapper">
		<resultMap type="Student" id="StudentResult">
			<id property="id" column="id" />
			<result property="name" column="name" />
			<result property="age" column="age" />
		</resultMap>
		<insert id="insertStudent" parameterType="Student">
			insert into t_student values(null,#{name},#{age},#{pic},#{remark});
		</insert>
		
		<select id="getStudentById" parameterType="Integer" resultType="Student">
		
		select * from t_student where id=#{id}
		</select>
		
		<select id="searchStudents6" resultMap="StudentResult">
		
		select * from t_student where name like #{param1} and age=#{param2}
		</select>
		<!-- 逻辑分页 -->
		<select id="findStudent" resultMap="StudentResult">
		select * from t_student 
		</select>
		<!-- 物理分页 -->
		<select id="findStudent2" resultMap="StudentResult">
		select * from t_student 
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
		</select>
	<!-- id:和接口里面的方法名对应、 -->
	<select id="searchStudents" parameterType="Map" resultMap="StudentResult">
		select * from t_student where 1=1
		<if test="gradeId!=null">
			and gradeId =#{gradeId}
		</if>
		<if test="name!=null">
			and name like #{name}
		</if>
		<if test="age!=null">
			and age =#{age}
		</if>
	</select>
	
	<select id="searchStudents2" parameterType="Map" resultMap="StudentResult">
		select * from t_student 
			<choose>
				<when test="searchBy=='gradeId'">
					where gradeId=#{gradeId}
				</when>
				<when test="searchBy=='name'">
					where name like #{name}
				</when>
				<otherwise> 
					where age = #{age}
				</otherwise>
			</choose>
	</select>
	
	<select id="searchStudents3" parameterType="Map" resultMap="StudentResult">
		select * from t_student 
			<where>
				<if test="gradeId!=null">
					and gradeId=#{gradeId}
				</if>
				<if test="name!=null">
					and name like #{name}
				</if>
				<if test="age!=null">
					and age=#{age}
				</if>
			</where>
	</select>
	
	<select id="searchStudents4" parameterType="Map" resultMap="StudentResult">
		select * from t_student 
			<trim prefix="where" prefixOverrides="and|or">
				<if test="gradeId!=null">
				and gradeId=#{gradeId}
				</if>
				<if test="name!=null">
					and name like #{name}
				</if>
				<if test="age!=null">
					and age=#{age}
				</if>
			</trim>
	</select>
	
		<select id="searchStudents5" parameterType="Map" resultMap="StudentResult">
		select * from t_student 
			<if test="gradeIds!=null">
			<where>
				gradeId in
				<foreach item="gradeId" collection="gradeIds" open="(" separator="," close=")">
					#{gradeId}
				</foreach>
			</where>
			</if>
	</select>
	
	<update id="updateStudent" parameterType="Student">
		update t_student
		<set>
			<if test="name!=null">
			name=#{name},			
			</if>
			<if test="age!=null">
			age=#{age},		
			</if>
		</set>	
		where id=#{id}
	</update>
</mapper> 